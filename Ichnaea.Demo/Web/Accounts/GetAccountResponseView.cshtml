@inherits NancyRazorViewBase<Restall.Ichnaea.Demo.Web.Accounts.GetAccountResponse>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>Ichnaea.Demo - Account @Model.Id</title>
	</head>

	<body>
		<section>
			<h1>Account Details</h1>
			<table>
				<thead>
					<tr><td>Sort Code</td><td>Account Number</td><td>Holder</td></tr>
				</thead>
				<tbody>
					<tr><td>@Model.SortCode</td><td>@Model.AccountNumber</td><td>@Model.Holder</td></tr>
				</tbody>
			</table>
			<p>Current Balance: @Model.Balance</p>
			<form method="POST" action="@Model.CreditAccountUri">
				<fieldset>
					<legend>Credit Account</legend>
					<div>
						<label for="CreditAmount">Amount:</label>
						<input type="text" maxlength="8" required="" id="CreditAmount" name="Amount" />
					</div>
					<div>
						<label for="CreditDescription">Description:</label>
						<input type="text" maxlength="32" required="" id="CreditDescription" name="Description"/>
					</div>
					<input type="submit" value="Credit" />
				</fieldset>
			</form>
			<form method="POST" action="@Model.DebitAccountUri">
				<fieldset>
					<legend>Debit Account</legend>
					<div>
						<label for="DebitAmount">Amount:</label>
						<input type="text" maxlength="8" required="" id="DebitAmount" name="Amount" />
					</div>
					<div>
						<label for="DebitDescription">Description:</label>
						<input type="text" maxlength="32" required="" id="DebitDescription" name="Description" />
					</div>
					<input type="submit" value="Debit" />
				</fieldset>
			</form>
			<p>
				Go <a href="@Model.GetAllAccountsUri">Back to All Accounts</a>.
			</p>
		</section>
		<section>
			<h1>Page Description</h1>
			<p>
				This page has been generated by the AccountQueryService.GetAccount() method and contains the details of a previously persisted Account.
			</p>
			<p>
				The Account is loaded by its ID (Sort Code and Account Number) via the AccountRepository class. The Repository loads persisted Events from
				an NEventStore Event Stream and replays them by calling the various IReplayDomainEvent&lt;&gt; implementations until all of the Aggregate
				Root's Domain Events have been read from the Event Stream.
			</p>
			<p>
				Note that an Account's ID is its Sort Code and Account Number, but this is sensitive data and so requires a Surrogate ID (ie.
				<strong>@Model.Id</strong> in the URL).  The Surrogates are outside of the Domain in this application, and so the lookup is done via
				regular RavenDB document interactions.
			</p>
		</section>
	</body>
</html>
