@inherits NancyRazorViewBase<GetAllAccountsResponse>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>Ichnaea.Demo - All Accounts</title>
	</head>

	<body>
		<section>
			<h1>All Accounts</h1>
			<table>
				<thead>
					<tr><td>Sort Code</td><td>Account Number</td><td>Holder</td></tr>
				</thead>
				<tbody>
					@foreach (var account in @Model.Accounts)
					{
						<tr>
							<td><a href="@account.GetDetailsUri">@account.SortCode</a></td>
							<td><a href="@account.GetDetailsUri">@account.AccountNumber</a></td>
							<td>@account.Holder</td>
						</tr>
					}
				</tbody>
			</table>
			<p>
				<a href="@Model.OpenAccountUri">Open Account</a>
			</p>
		</section>
		<section>
			<h1>Page Description</h1>
			<p>
				This page has been generated by the AccountQueryService.GetAllAccounts() method and is a summary of the Accounts that have been Opened.
			</p>
			<p>
				The summary is actually a RavenDB projection, meaning that none of the Domain Model or Ichnaea functionality has been invoked.  An example
				of this in the real world may be a Reporting Database or CQRS architecture, both of which use an alternate read-only model.
			</p>
		</section>
	</body>
</html>
